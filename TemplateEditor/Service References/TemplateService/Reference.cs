//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TemplateEditor.TemplateService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateType", Namespace="http://schemas.datacontract.org/2004/07/Cats.TemplateServer.Dto")]
    [System.SerializableAttribute()]
    public partial class TemplateType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateObject {
            get {
                return this.TemplateObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateObjectField, value) != true)) {
                    this.TemplateObjectField = value;
                    this.RaisePropertyChanged("TemplateObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateTypeId {
            get {
                return this.TemplateTypeIdField;
            }
            set {
                if ((this.TemplateTypeIdField.Equals(value) != true)) {
                    this.TemplateTypeIdField = value;
                    this.RaisePropertyChanged("TemplateTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Template", Namespace="http://schemas.datacontract.org/2004/07/Cats.TemplateServer.Dto")]
    [System.SerializableAttribute()]
    public partial class Template : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((this.TemplateTypeField.Equals(value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateFields", Namespace="http://schemas.datacontract.org/2004/07/Cats.TemplateServer.Dto")]
    [System.SerializableAttribute()]
    public partial class TemplateFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateFieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TemplateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateFieldId {
            get {
                return this.TemplateFieldIdField;
            }
            set {
                if ((this.TemplateFieldIdField.Equals(value) != true)) {
                    this.TemplateFieldIdField = value;
                    this.RaisePropertyChanged("TemplateFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageFileInfo", Namespace="http://schemas.datacontract.org/2004/07/Cats.TemplateServer.Dto")]
    [System.SerializableAttribute()]
    public partial class StorageFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long Sizek__BackingFieldField;
        
        private string VirtualPathk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Size>k__BackingField", IsRequired=true)]
        public long Sizek__BackingField {
            get {
                return this.Sizek__BackingFieldField;
            }
            set {
                if ((this.Sizek__BackingFieldField.Equals(value) != true)) {
                    this.Sizek__BackingFieldField = value;
                    this.RaisePropertyChanged("Sizek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<VirtualPath>k__BackingField", IsRequired=true)]
        public string VirtualPathk__BackingField {
            get {
                return this.VirtualPathk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.VirtualPathk__BackingFieldField, value) != true)) {
                    this.VirtualPathk__BackingFieldField = value;
                    this.RaisePropertyChanged("VirtualPathk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LetterTemplate", Namespace="http://schemas.datacontract.org/2004/07/Cats.TemplateServer.Dto")]
    [System.SerializableAttribute()]
    public partial class LetterTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LetterTemplateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TemplateTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LetterTemplateID {
            get {
                return this.LetterTemplateIDField;
            }
            set {
                if ((this.LetterTemplateIDField.Equals(value) != true)) {
                    this.LetterTemplateIDField = value;
                    this.RaisePropertyChanged("LetterTemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((this.TemplateTypeField.Equals(value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemplateService.ITemplateManager")]
    public interface ITemplateManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/DoWork", ReplyAction="http://tempuri.org/ITemplateManager/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/TemplateTypes", ReplyAction="http://tempuri.org/ITemplateManager/TemplateTypesResponse")]
        string TemplateTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetTemplateTypes", ReplyAction="http://tempuri.org/ITemplateManager/GetTemplateTypesResponse")]
        TemplateEditor.TemplateService.TemplateType[] GetTemplateTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetAllTemplates", ReplyAction="http://tempuri.org/ITemplateManager/GetAllTemplatesResponse")]
        TemplateEditor.TemplateService.Template[] GetAllTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetTemplates", ReplyAction="http://tempuri.org/ITemplateManager/GetTemplatesResponse")]
        TemplateEditor.TemplateService.Template[] GetTemplates(int templateType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetTemplateById", ReplyAction="http://tempuri.org/ITemplateManager/GetTemplateByIdResponse")]
        TemplateEditor.TemplateService.Template GetTemplateById(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetTemplateByName", ReplyAction="http://tempuri.org/ITemplateManager/GetTemplateByNameResponse")]
        TemplateEditor.TemplateService.Template GetTemplateByName(string templateName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetFieldsByTemplateId", ReplyAction="http://tempuri.org/ITemplateManager/GetFieldsByTemplateIdResponse")]
        TemplateEditor.TemplateService.TemplateFields[] GetFieldsByTemplateId(int templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/Authenticate", ReplyAction="http://tempuri.org/ITemplateManager/AuthenticateResponse")]
        bool Authenticate(string userName, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/GetFile", ReplyAction="http://tempuri.org/ITemplateManager/GetFileResponse")]
        System.IO.Stream GetFile(string virtualPath);
        
        // CODEGEN: Generating message contract since the operation PutFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/PutFile", ReplyAction="http://tempuri.org/ITemplateManager/PutFileResponse")]
        TemplateEditor.TemplateService.PutFileResponse PutFile(TemplateEditor.TemplateService.FileUploadMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/DeleteFile", ReplyAction="http://tempuri.org/ITemplateManager/DeleteFileResponse")]
        void DeleteFile(string virtualPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/List", ReplyAction="http://tempuri.org/ITemplateManager/ListResponse")]
        TemplateEditor.TemplateService.StorageFileInfo[] List(string virtualPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemplateManager/InsertToLetterTemplate", ReplyAction="http://tempuri.org/ITemplateManager/InsertToLetterTemplateResponse")]
        void InsertToLetterTemplate(TemplateEditor.TemplateService.LetterTemplate letterTemplate);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string VirtualPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream DataStream;
        
        public FileUploadMessage() {
        }
        
        public FileUploadMessage(string VirtualPath, System.IO.Stream DataStream) {
            this.VirtualPath = VirtualPath;
            this.DataStream = DataStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PutFileResponse {
        
        public PutFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITemplateManagerChannel : TemplateEditor.TemplateService.ITemplateManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemplateManagerClient : System.ServiceModel.ClientBase<TemplateEditor.TemplateService.ITemplateManager>, TemplateEditor.TemplateService.ITemplateManager {
        
        public TemplateManagerClient() {
        }
        
        public TemplateManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemplateManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemplateManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemplateManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public string TemplateTypes() {
            return base.Channel.TemplateTypes();
        }
        
        public TemplateEditor.TemplateService.TemplateType[] GetTemplateTypes() {
            return base.Channel.GetTemplateTypes();
        }
        
        public TemplateEditor.TemplateService.Template[] GetAllTemplates() {
            return base.Channel.GetAllTemplates();
        }
        
        public TemplateEditor.TemplateService.Template[] GetTemplates(int templateType) {
            return base.Channel.GetTemplates(templateType);
        }
        
        public TemplateEditor.TemplateService.Template GetTemplateById(int templateId) {
            return base.Channel.GetTemplateById(templateId);
        }
        
        public TemplateEditor.TemplateService.Template GetTemplateByName(string templateName) {
            return base.Channel.GetTemplateByName(templateName);
        }
        
        public TemplateEditor.TemplateService.TemplateFields[] GetFieldsByTemplateId(int templateId) {
            return base.Channel.GetFieldsByTemplateId(templateId);
        }
        
        public bool Authenticate(string userName, string passWord) {
            return base.Channel.Authenticate(userName, passWord);
        }
        
        public System.IO.Stream GetFile(string virtualPath) {
            return base.Channel.GetFile(virtualPath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TemplateEditor.TemplateService.PutFileResponse TemplateEditor.TemplateService.ITemplateManager.PutFile(TemplateEditor.TemplateService.FileUploadMessage request) {
            return base.Channel.PutFile(request);
        }
        
        public void PutFile(string VirtualPath, System.IO.Stream DataStream) {
            TemplateEditor.TemplateService.FileUploadMessage inValue = new TemplateEditor.TemplateService.FileUploadMessage();
            inValue.VirtualPath = VirtualPath;
            inValue.DataStream = DataStream;
            TemplateEditor.TemplateService.PutFileResponse retVal = ((TemplateEditor.TemplateService.ITemplateManager)(this)).PutFile(inValue);
        }
        
        public void DeleteFile(string virtualPath) {
            base.Channel.DeleteFile(virtualPath);
        }
        
        public TemplateEditor.TemplateService.StorageFileInfo[] List(string virtualPath) {
            return base.Channel.List(virtualPath);
        }
        
        public void InsertToLetterTemplate(TemplateEditor.TemplateService.LetterTemplate letterTemplate) {
            base.Channel.InsertToLetterTemplate(letterTemplate);
        }
    }
}
